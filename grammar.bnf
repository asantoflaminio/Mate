<S> ::=  "START" <code> "FINISH"

<code> ::= "" | <instruction> <code> | <control_sequence> <code>

<instruction> ::= <declaration> <asign>"END_INSTR" 
|<declaration> <assign_string>"END_INSTR" 
|<declaration>"END_INSTR" 
| <print>"END_INSTR" 
| "VAR_NAME" <assign>"END_INSTR" 
| "VAR_NAME" <assign_string>"END_INSTR" 
| "VAR_NAME" "INCREMENT" 
| "VAR_NAME" "DECREMENT" 
| in"END_INSTR"

<declaration> ::= <type> "VAR_NAME"

<type> ::= "INT_VAR" | "STRING_VAR" | "CHAR_VAR" | "FLOAT_VAR"

<assign> ::= "ASSIGNATION" <expression>

<assign_string> ::= "ASSIGNATION" "STRING"

<print> ::= "PRINT" "OPEN_PARENTHESIS" <cerrar_print> | "PRINT" "OPEN_PARENTHESIS" "STRING" "CLOSE_PARENTHESIS"

<cerrar_print> ::= "COMMA" "STRING" "CLOSE_PARENTHESIS" | "COMMA" "VAR_NAME" "CLOSE_PARENTHESIS" | "COMMA" "INTEGER" "CLOSE_PARENTHESIS" | "COMMA" "FLOAT" "CLOSE_PARENTHESIS" | "COMMA" <expression> "CLOSE_PARENTHESIS" | "COMMA" "STRING" <cerrar_print> | "COMMA" "VAR_NAME" <cerrar_print> | "COMMA" "INTEGER" <cerrar_print> | "COMMA" <expression> <cerrar_print>

<in> ::= "SCAN" "OPEN_PARENTHESIS" "STRING" <cerrar_in>

<cerrar_in> ::= "COMMA" "AMPERSAND" "VAR_NAME" "CLOSE_PARENTHESIS" | "COMMA" "AMPERSAND" "VAR_NAME" <cerrar_in>

<control_sequence> ::= <if_block> | <loop> | <switch_block>

<if_block> ::= "IF" "OPEN_PARENTHESIS" <boolean_expression> "CLOSE_PARENTHESIS" <open_bracket> <code> <close_bracket> |
 "IF" "OPEN_PARENTHESIS" <boolean_expression> "CLOSE_PARENTHESIS" "OPEN_BRACKET" <code> "CLOSE_BRACKET" "ELSE" <if_block> | "IF" "OPEN_PARENTHESIS" <boolean_expression> "CLOSE_PARENTHESIS" "OPEN_BRACKET" <code> "CLOSE_BRACKET" "ELSE" "OPEN_BRACKET" <code> "CLOSE_BRACKET"

<loop> ::= "DO" "OPEN_BRACKET" <code> "CLOSE_BRACKET" "WHILE" "OPEN_PARENTHESIS"<boolean_expresion> "CLOSE_PARENTHESIS"  | "WHILE" "OPEN_PARENTHESIS" <boolean_expresion> "CLOSE_PARENTHESIS"  "OPEN_BRACKET" <code> "CLOSE_BRACKET" | "FOR" "OPEN_PARENTHESIS"<instruction> <boolean_expression> "END_INSTR" "VAR_NAME" "INCREMENT" "CLOSE_PARENTHESIS" "OPEN_BRACKET" <code> "CLOSE_BRACKET"

<switch_block> ::= "SWITCH" "OPEN_PARENTHESIS" "VAR_NAME" "CLOSE_PARENTHESIS" "OPEN_BRACKET" <inside_switch> "CLOSE_BRACKET"

<inside_switch> ::= "CASE" "CHARACTER" "COLON" <code> "BREAK" "END_INSTR" <default_switch> | "CASE" "CHARACTER" "COLON" <code> "BREAK" "END_INSTR" <inside_switch>

<default_switch> ::= "DEFAULT" "COLON" <code>

<boolean_expression> ::= <boolean_expression> "OR" <boolean_term> | <boolean_term>

<boolean_term> ::= <boolean_term> "AND" <boolean_factor> | <boolean_factor>

<boolean_factor> ::= "OPEN_PARENTHESIS" <boolean_expression> "CLOSE_PARENTHESIS" | "NEGATIV" <boolean_factor> | <boolean>

<boolean> ::= "TRUE" | "FALSE" | <comparation>

<comparation> ::=  <expression> <compare_operator> <expression>

<expression> ::= "OPEN_PARENTHESIS" <expression> "ADD" <term> "CLOSE_PARENTHESIS" | "OPEN_PARENTHESIS" <expression> "SUB" <term> "CLOSE_PARENTHESIS" | <term> 
| <expression> "ADD" <term> | <expression> "SUB" <term> | <expression> "MODULO" <term>

<term> ::= "OPEN_PARENTHESIS" <term> "MULTIPLY" <factor> "CLOSE_PARENTHESIS" | "OPEN_PARENTHESIS" <term> "DIV" <factor> "CLOSE_PARENTHESIS" | <term> <factor> | <factor> 
| <term> "MULTIPLY" <factor> | <term> "DIV" <factor> | "EL_DIEGO"

<factor> ::= "VAR_NAME" | "INTEGER" | "FLOAT"

<compare_operator> ::= "LOWERTHAN" | "GREATERTHAN" | "EQUAL" |"DIST" | "LOWEREQUAL" | "GREATEREQUAL"